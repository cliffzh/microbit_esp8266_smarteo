<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="H]e{`SmGm.olT70nQjWB" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="[rpAln{(mFYw:o77I8BF" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace ESP8266Smarteo {" line1="    " line2="    function sendAT(command : string, wait : number = 0) {" line3="        serial.writeString(`${command}\u000D\u000A`)" line4="        basic.pause(wait)" line5="    }" line6="" line7="    function resetESP() {" line8="        sendAT(&quot;AT+RESTORE&quot;, 1000) // restore to factory settings" line9="        sendAT(&quot;AT+RST&quot;, 1000) // reset the module" line10="        sendAT(&quot;AT+CWMODE=1&quot;, 500) // set to station mode" line11="    }" line12="" line13="    function isConnectedWiFi() : boolean {" line14="        sendAT(&quot;AT+CWJAP?&quot;, 5000)" line15="        let response = serial.readString()" line16="        return response.includes(&quot;NO AP&quot;) == false" line17="    }" line18="    " line19="    /**" line20="     * Initialize ESP8266 module" line21="     */" line22="    //% block='set ESP8266 RX %rx TX %tx Baudrate %baudrate'" line23="    //% tx.defl='SerialPin.P14'" line24="    //% rx.defl='SerialPin.P0'" line25="    //% baudrate.defl='baudrate.BaudRate115200'" line26="    export function initesp8266(tx : SerialPin, rx : SerialPin, baudrate : BaudRate) {" line27="        try {" line28="            serial.redirect(tx, rx, BaudRate.BaudRate115200)" line29="            basic.pause(100)" line30="            serial.setTxBufferSize(128)" line31="            serial.setRxBufferSize(128)" line32="            resetESP()" line33="        }" line34="        catch(e) {" line35="            basic.showString(&quot;Erreur pins :&quot; + e)" line36="        }" line37="            " line38="    }" line39="" line40="    /**" line41="     * Connect to Wifi router" line42="     */" line43="    //% block='Connect Wifi SSID %ssid password %password ip address %ip_address'" line44="    //% ssid.defl='Smarteo'" line45="    //% password.defl='%Smarteo123'" line46="    //% ip_address.defl='192.168.1.30'" line47="    export function connectToWifi(ssid : string, password : string, ip_address : string) : boolean {" line48="        sendAT(`AT+CWJAP=&quot;${ssid}&quot;,&quot;${password}&quot;`, 5000)" line49="        if(!isConnectedWiFi()) {" line50="            basic.showString(&quot;echec du connexion wifi&quot;)" line51="            return false" line52="        }" line53="        sendAT(`AT+CIPSTA=&quot;${ip_address}&quot;`, 1000)" line54="        return true" line55="    }" line56=" }" numlines="57"></mutation></block></statement></block></xml>