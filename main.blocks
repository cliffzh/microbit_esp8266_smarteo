<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="@I8KE~[kU`-442mPbt|X" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="`by~,HPvXqOJ[{%@wcI," editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace ESP8266Smarteo {" line1="    " line2="    function sendAT(command : string, wait : number = 0) {" line3="        serial.writeString(`${command}\u000D\u000A`)" line4="        basic.pause(wait)" line5="    }" line6="" line7="    function resetESP() {" line8="        sendAT(&quot;AT+RESTORE&quot;, 1000) // restore to factory settings" line9="        sendAT(&quot;AT+RST&quot;, 1000) // reset the module" line10="        let response = serial.readString()" line11="        console.log(response)" line12="        sendAT(&quot;AT+CWMODE=1&quot;, 500) // set to station mode" line13="        basic.pause(3000)" line14="    }" line15="    " line16="    export function initesp8266(tx : SerialPin, rx : SerialPin, baudrate : BaudRate) {" line17="        serial.redirect(tx, rx, BaudRate.BaudRate115200)" line18="        basic.pause(100)" line19="        serial.setTxBufferSize(128)" line20="        serial.setRxBufferSize(128)" line21="        resetESP()" line22="    }" line23="" line24="    export function connectesp8266(ssid : string, password : string, ip_address : string) {" line25="        sendAT(`AT+CWJAP=&quot;${ssid}&quot;,&quot;${password}&quot;`)" line26="        let response2 = serial.readString()" line27="        console.log(response2)" line28="        sendAT(`AT+CIPSTA=&quot;${ip_address}&quot;`, 1000)" line29="    }" line30=" }" numlines="31"></mutation></block></statement></block></xml>